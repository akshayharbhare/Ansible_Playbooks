---
# tasks file for Password_Hardening
- name: Check the existence of directory
  stat:
    path: /var/pb_backup/password_policy
  register: dir
  ignore_errors: yes

- name: Create Directory
# file:
#  dest: '{{ backup_dir }}/password_policy'
#  state: directory
  command: mkdir -p /var/pb_backup/password_policy
  when: dir.stat.exists == false

- name: Check the existence of backup file
  stat:
    path: '{{ backup_dir }}/password_policy/pwquality.conf'
  register: pwquality
  ignore_errors: yes

- name: Backup the Original Configuration file
  #copy:
  #  dest: '{{ backup_dir }}/password_policy/pwauality.conf'
  # src: /etc/security/pwquality.conf
  command: cp -rf /etc/security/pwquality.conf '{{ item }}/password_policy/pwquality.conf'
  with_items:
  - "{{ backup_dir }}"

- name: Maintain the Timestamp
  lineinfile: 
    dest: /etc/security/pwquality.conf
    regexp: "{{ ansible_date_time.date }}"
    insertbefore: "^ # Configuration for systemwide password quality limits"
    line: "# {{ ansible_date_time.date }}"

- name: Ensure that libpwquality is installed
  tags: pam_pwquality
  yum:
    name: libpwquality
    state: present
    update_cache: yes
  register: pam_pwquality_yum

- name: Apply pam_pwquality configuration
  tags: pam_pwquality
  template:
    src: pwquality.conf.j2
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: 0644
    force: yes
  when: pam_pwquality_yum|success

- name: Check the existence of backup file
  stat:
    path: /var/pb_backup/password_policy/system-auth
  register: system_auth
  ignore_errors: yes

- name: Backup file for system-auth
  command: cp /etc/pam.d/system-auth /var/pb_backup/password_policy/system-auth

- name: Maintain the Timestamp
  lineinfile: 
    dest: /etc/pam.d/system-auth
    regexp: "{{ ansible_date_time.date }}"
    insertbefore: "^ #%PAM-1.0"
    line: "# {{ ansible_date_time.date }}"
  
- name: Set Lockout for Failed Password Attempts
  tags: password_lockout
  lineinfile:
    dest: '/etc/pam.d/system-auth'
    regexp: "^auth        required      pam_tally2.so file=/var/log/tallylog deny=5 unlock_time=1800"
    insertafter: "^# User"
    line: auth        required      pam_tally2.so file=/var/log/tallylog deny=5 unlock_time=1800

- name: In system-auth
  tags: password_lockout
  lineinfile:
    dest: '/etc/pam.d/system-auth'
    regexp: "^account     required      pam_tally2.so reset"
    insertbefore: "^account     required      pam_unix.so"
    line: account     required      pam_tally2.so reset
    state: present

- name: Check the existence of backup file
  stat:
    path: /var/pb_backup/password_policy/sshd
  register: sshd
  ignore_errors: yes

- name: Backup file for sshd
  command: cp /etc/pam.d/sshd /var/pb_backup/password_policy/sshd

- name: Maintain the Timestamp
  lineinfile: 
    dest: /etc/pam.d/sshd
    regexp: "{{ ansible_date_time.date }}"
    insertbefore: "^ #%PAM-1.0"
    line: "# {{ ansible_date_time.date }}"

- name: Set Lockout for Failed Password Attempts-sshd
  tags: password_lockout
  lineinfile:
    dest: '/etc/pam.d/sshd'
    regexp: "^auth       required     pam_tally2.so file=/var/log/tallylog deny=5  unlock_time=1800"
    insertafter: "^#%PAM-1.0"
    line: auth       required     pam_tally2.so file=/var/log/tallylog deny=5 unlock_time=1800

- name: In sshd
  tags: password_lockout
  lineinfile:
    dest: '/etc/pam.d/sshd'
    regexp: "^account    required     pam_tally2.so"
    insertafter: "^-auth"
    line: account    required     pam_tally2.so
    state: present

- name: Check the existence of backup file
  stat:
    path: /var/pb_backup/password_policy/login.defs
  register: login
  ignore_errors: yes

- name: Backup file for login.defs
  command: cp /etc/login.defs /var/pb_backup/password_policy/login.defs
 
- name: Maintain the Timestamp
  lineinfile: 
    dest: /etc/login.defs
    regexp: "{{ ansible_date_time.date }}"
    insertbefore: "^ # Please note that the parameters in this configuration file control the"
    line: "# {{ ansible_date_time.date }}"

- name: Apply login.defs configuration
  tags: login_defs
  template:
    src: login.defs.j2
    dest: /etc/login.defs
    owner: root
    group: root
    mode: 0644

